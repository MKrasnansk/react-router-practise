{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mkras\\\\OneDrive\\\\Po\\u010D\\xEDta\\u010D\\\\Projects\\\\Courses\\\\react\\\\practise-Spa\\\\src\\\\components\\\\comments\\\\NewCommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewCommentForm = props => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp(addComment);\n  const {\n    onAddedComment\n  } = props;\n  const commentTextRef = useRef();\n  const enteredText = commentTextRef.current.value;\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status]);\n\n  const submitFormHandler = event => {\n    event.preventDefault(); // optional: Could validate here\n    // send comment to server\n\n    sendRequest({\n      text: enteredText\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [status === 'pending' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewCommentForm, \"tr2IF9Qxom/3Jz/MqlYh6N0uEsM=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewCommentForm;\nexport default NewCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"sources":["C:/Users/mkras/OneDrive/Počítač/Projects/Courses/react/practise-Spa/src/components/comments/NewCommentForm.js"],"names":["useRef","useEffect","useHttp","addComment","LoadingSpinner","classes","NewCommentForm","props","sendRequest","status","error","onAddedComment","commentTextRef","enteredText","current","value","submitFormHandler","event","preventDefault","text","form","control","actions"],"mappings":";;;AAAA,SAASA,MAAT,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,MAAiCR,OAAO,CAACC,UAAD,CAA9C;AACA,QAAK;AAACQ,IAAAA;AAAD,MAAmBJ,KAAxB;AACA,QAAMK,cAAc,GAAGZ,MAAM,EAA7B;AAEA,QAAMa,WAAW,GAAGD,cAAc,CAACE,OAAf,CAAuBC,KAA3C;AAEAd,EAAAA,SAAS,CAAC,MAAM;AAClB,QAAIQ,MAAM,KAAK,WAAX,IAA0B,CAACC,KAA/B,EAAsC;AACpCC,MAAAA,cAAc;AACf;AACE,GAJQ,EAIN,CAACF,MAAD,CAJM,CAAT;;AAMA,QAAMO,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN,GADmC,CAGnC;AAEA;;AACAV,IAAAA,WAAW,CAAC;AAAEW,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAX;AACD,GAPD;;AASA,sBACE;AAAM,IAAA,SAAS,EAAER,OAAO,CAACe,IAAzB;AAA+B,IAAA,QAAQ,EAAEJ,iBAAzC;AAAA,eACGP,MAAM,KAAK,SAAX,iBACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACgB,OAAxB;AAAiC,MAAA,QAAQ,EAAEL,iBAA3C;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAU,QAAA,EAAE,EAAC,SAAb;AAAuB,QAAA,IAAI,EAAC,GAA5B;AAAgC,QAAA,GAAG,EAAEJ;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAUE;AAAK,MAAA,SAAS,EAAEP,OAAO,CAACiB,OAAxB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAtCD;;GAAMhB,c;UACmCJ,O;;;KADnCI,c;AAwCN,eAAeA,cAAf","sourcesContent":["import { useRef , useEffect} from 'react'\nimport useHttp from '../../hooks/use-http'\nimport { addComment } from '../../lib/api'\nimport LoadingSpinner from '../UI/LoadingSpinner'\nimport classes from './NewCommentForm.module.css'\n\nconst NewCommentForm = (props) => {\n  const { sendRequest, status, error } = useHttp(addComment)\n  const{onAddedComment} = props\n  const commentTextRef = useRef()\n\n  const enteredText = commentTextRef.current.value\n\n  useEffect(() => {\nif (status === 'completed' && !error) {\n  onAddedComment()\n}\n  }, [status])\n  \n  const submitFormHandler = (event) => {\n    event.preventDefault()\n\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({ text: enteredText })\n  }\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  )\n}\n\nexport default NewCommentForm\n"]},"metadata":{},"sourceType":"module"}